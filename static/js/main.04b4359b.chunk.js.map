{"version":3,"sources":["components/Draggable.js","components/DraggableList.js","components/DraggableForm.js","components/DragTrash.js","util.js","App.js","index.js"],"names":["Draggable","draggable","onDragStart","onDrop","id","style","backgroundColor","color","className","onDragOver","e","preventDefault","DraggableList","list","map","DraggableForm","add","useState","setColor","onSubmit","type","value","onChange","target","placeholder","onClick","randomColor","DragTrash","remove","numberToLetters","num","letters","Math","floor","getNextId","draggables","nextIdNumber","length","some","App","util","setDraggables","dataTransfer","setData","getAttribute","droppedId","getData","droppedIntoId","clone","droppedIndex","findIndex","cachedDropped","splice","droppedIntoIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04b4359b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Draggable({ draggable, onDragStart, onDrop }) {\r\n  return (\r\n    <div\r\n      draggable-id={draggable.id}\r\n      style={{ backgroundColor: draggable.color }}\r\n      className=\"draggable\"\r\n      draggable\r\n      onDragOver={(e) => e.preventDefault()}\r\n      onDragStart={onDragStart}\r\n      onDrop={onDrop}\r\n    >\r\n      {draggable.id}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Draggable;\r\n","import React from \"react\";\r\nimport Draggable from \"./Draggable\";\r\n\r\nfunction DraggableList({ list, onDragStart, onDrop }) {\r\n  return (\r\n    <div>\r\n      {list.map((draggable) => (\r\n        <Draggable\r\n          key={draggable.id}\r\n          draggable={draggable}\r\n          onDragStart={onDragStart}\r\n          onDrop={onDrop}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraggableList;\r\n","import React, { useState } from \"react\";\r\nimport randomColor from \"randomcolor\";\r\n\r\nfunction DraggableForm({ add }) {\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    add({ color });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitForm}>\r\n      <input\r\n        type=\"text\"\r\n        value={color}\r\n        onChange={(e) => setColor(e.target.value)}\r\n        placeholder=\"Color\"\r\n      />\r\n      <button>Add</button>\r\n      <button onClick={() => setColor(randomColor())} type=\"button\">\r\n        Randomize\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default DraggableForm;\r\n","import React from \"react\";\r\n\r\nfunction DragTrash({ remove }) {\r\n  return (\r\n    <div\r\n      className=\"draggable trash\"\r\n      onDrop={remove}\r\n      onDragOver={(e) => e.preventDefault()}\r\n    >\r\n      Trash\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DragTrash;\r\n","function numberToLetters(num) {\r\n  let letters = \"\";\r\n  while (num >= 0) {\r\n    letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"[num % 26] + letters;\r\n    num = Math.floor(num / 26) - 1;\r\n  }\r\n  return letters;\r\n}\r\n\r\nfunction getNextId(draggables) {\r\n  let nextIdNumber = draggables.length;\r\n  while (\r\n    draggables.some(\r\n      (draggable) => draggable.id === numberToLetters(nextIdNumber)\r\n    )\r\n  ) {\r\n    nextIdNumber++;\r\n  }\r\n  return numberToLetters(nextIdNumber);\r\n}\r\n\r\nexport default { numberToLetters, getNextId };\r\n","import React, { useState } from \"react\";\r\nimport DraggableList from \"./components/DraggableList\";\r\nimport \"./App.css\";\r\nimport DraggableForm from \"./components/DraggableForm\";\r\nimport DragTrash from \"./components/DragTrash\";\r\nimport randomColor from \"randomcolor\";\r\nimport util from \"./util\";\r\n\r\nfunction App() {\r\n  const [draggables, setDraggables] = useState([\r\n    {\r\n      color: randomColor(),\r\n      id: util.numberToLetters(0),\r\n    },\r\n    {\r\n      color: randomColor(),\r\n      id: util.numberToLetters(1),\r\n    },\r\n    {\r\n      color: randomColor(),\r\n      id: util.numberToLetters(2),\r\n    },\r\n  ]);\r\n\r\n  const onDragStart = (e) => {\r\n    e.dataTransfer.setData(\"text\", e.target.getAttribute(\"draggable-id\"));\r\n  };\r\n\r\n  const swap = (e) => {\r\n    const droppedId = e.dataTransfer.getData(\"text\");\r\n    const droppedIntoId = e.target.getAttribute(\"draggable-id\");\r\n\r\n    const clone = [...draggables];\r\n\r\n    const droppedIndex = clone.findIndex(\r\n      (draggable) => draggable.id === droppedId\r\n    );\r\n    const droppedIntoIndex = clone.findIndex(\r\n      (draggable) => draggable.id === droppedIntoId\r\n    );\r\n\r\n    const cachedDropped = clone[droppedIndex];\r\n    const cachedDroppedInto = clone[droppedIntoIndex];\r\n\r\n    clone[droppedIndex] = cachedDroppedInto;\r\n    clone[droppedIntoIndex] = cachedDropped;\r\n\r\n    setDraggables(clone);\r\n  };\r\n\r\n  const insert = (e) => {\r\n    const droppedId = e.dataTransfer.getData(\"text\");\r\n    const droppedIntoId = e.target.getAttribute(\"draggable-id\");\r\n\r\n    const clone = [...draggables];\r\n\r\n    const droppedIndex = clone.findIndex(\r\n      (draggable) => draggable.id === droppedId\r\n    );\r\n    const cachedDropped = clone.splice(droppedIndex, 1);\r\n\r\n    const droppedIntoIndex = clone.findIndex(\r\n      (draggable) => draggable.id === droppedIntoId\r\n    );\r\n    clone.splice(droppedIntoIndex, 0, cachedDropped[0]);\r\n\r\n    setDraggables(clone);\r\n  };\r\n\r\n  const add = (draggable) => {\r\n    setDraggables([\r\n      ...draggables,\r\n      {\r\n        ...draggable,\r\n        id: util.getNextId(draggables),\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const remove = (e) => {\r\n    const clone = [...draggables];\r\n\r\n    const droppedId = e.dataTransfer.getData(\"text\");\r\n    const droppedIndex = clone.findIndex(\r\n      (draggable) => draggable.id === droppedId\r\n    );\r\n\r\n    clone.splice(droppedIndex, 1);\r\n\r\n    setDraggables(clone);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DraggableForm add={add} />\r\n      <DraggableList\r\n        list={draggables}\r\n        onDragStart={onDragStart}\r\n        onDrop={insert}\r\n      />\r\n      <DragTrash remove={remove} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}